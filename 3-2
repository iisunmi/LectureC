#include <stdio.h>
#include <string.h>
#include <stdlib.h>
int main(void) {
	int score[10] = { 0 };
	int sp = -1; 
		++sp; //추가하기
	score[sp] = 1; //추가하기/ 첫번호에 요소1 넣기
	int value = score[sp]; //마지막(최근) 요소를 꺼내서 value 변수에 넣어놓기
	--sp; //[]의 번호가 1개 내려감
	return 0;
}


/*정수 배열
초기화된 배열 생성
int score[2 * 5] = { 0 }; //0으로 초기화시켰다. []안에 변수 못 써, 상수만 써라
				           단, [maxLength+1]은 상수이므로 사용가능

row x length of row+col = row행 col열/2차배열을 굳이 안 만들어도 1차배열을 만들어서 이 수식을 활용하면 됨
행번호x행길이 +열번호

    int index = 1 * 5 + 2;
	score[7] = 1;
	printf("%d\n", score[index]);
	printf("%d\n", score[7]);


배열의 요소를 추가하는 과정
int score[10] ={0}; 0으로 초기화시켰다
int last = -1; // last라는 변수에 -1 값을 넣었다
                  목적 :마지막에 추가한 게 몇번에 있는 것인가?
score[last]=1;




초기화가 -1일 때
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
int main(void) {
	int score[10] = { 0 };
	int last = -1;
	++last;
	score[last] = 1; //처음이자 마지막
	++last;
	score[last] = 2; //마지막
	++last;
	score[last] = 3; //데이터를 총3개 저장한거임. 마지막은 [2]번에 저장한거임
	//출력 시 추가된 값을(저장한) 출력하라
	for (int i = 0; i <= last; i++) {
		printf("[%d]%d\n", i, score[i]);
	}
	if(last<10-1){//아래의 ++last로 인해  +1 되니깐 1개를 빼야해, 안그럼 범위벗어나서 오류
		++last;
		score[last] = 3;
	}
	else {
		printf("full\n");
	}
	return 0;
}


초기화가 0일 때
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
int main(void) {
	int score[10] = { 0 };
	int last = 0; //배열번호는 항상 0부터인데, 이렇게 되면 [0]번을 안 쓰고 버리게 되는 거임
	//++last;       // 그래서 여기있는 ++last; 지워버리기~
	score[last] = 1; //처음이자 마지막
	++last;
	score[last] = 2; //마지막
	++last;
	score[last] = 3; //데이터를 총3개 저장한거임. 마지막은 [2]번에 저장한거임
	//출력 시 추가된 값을(저장한) 출력하라
	for (int i = 0; i < last; i++) {
		printf("[%d]%d\n", i, score[i]);
	}
	if (last <= 10 - 1) {//아래의 ++last로 인해  +1 되니깐 1개를 빼야해, 안그럼 범위벗어나서 오류
		score[last] = 3;
		++last;
	}
	else {
		printf("full\n");
	}
	return 0;
}



head : out/ 출력하기 위해 꺼낼 때 사용
tail : in / 데이터를 추가할때 사용
꺼내면 버려짐, 삭제됨
두 개 같으면 빈 상태, 꽉 찬 상태 두 가지 경우가 있음
빈 상태 표현하는 법
꽉 찬 상태 표현하는 법

알고리즘
일정한 크기의 배열에서 데이터 추가꺼내기를 반복하며 공간을 잘 활용하려고 하는 방법
2개 이상의 변수들로 공간을 제어하는 법
요소 번호를 제어하는 아이디어~원형 큐 다룰 예정
스택 : 선입후출, 후입선출
int score[10]={0};
int sp=-1; /스택포인터=마지막요소의 번호를 알수있게끔 표현
++sp; //추가하기
score[sp]=1; //추가하기
int value=score[sp]; //요소를 꺼내기
--sp;






*/
