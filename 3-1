#include <stdio.h>
#include <string.h>
#include <stdlib.h>
int main1(void) {
	int score[] = { 1,2,3,4,5,6,7,8,9 }; //묵시적 선언
	int length = sizeof(score) / sizeof(score[0]);// 배열의 길이(=개수)(배열명길이/요소명길이)를 변수에 따로 저장하라
	//sizeof(배열명)-길이와 크기를 판단하기 위한 연산, 가장 많이 쓰는 연산 (byte값)
	printf(" size of array:%d\n", sizeof(score)); //배열명 출력
	printf(" size of element:%d\n", sizeof(score[0])); //요소명 출력

	printf("%d\n", score); //배열의 주소가 아니라 0번(요소)의 주소이다.
						 //메모리의 바이트 번호가 출력됨.
						 //주소는 운영체제가 출력하므로 매번 출력할 때마다 달라짐.


	return 0;
}

/* 배열 선언(생성)
배열 : 자료형이 같은 변수(데이터)를 모아놓은 덩어리
선형구조, 비선형구조 등등
자료형과 최대개수(길이)를 정해야함
1차배열 : []가 1개있는 것 -선형구조
int arr [10] : int형 요소 최대 10개를 저장할 수 있다는 뜻
문자열 배열 : 캐릭형 배열 만드는 것
char string[80] : 검은 콘솔창의 폭이 80, c에서 기본값

현재 길이와 최대길이를 항상 비교하여 배열 초과하는 일을 막도록 하자
int length = 10;  배열의 길이를 저장하는 변수 ***배열의 길이는 최대 몇 개인지를 뜻
int curlength = 0; 현재의 길이 ***현재 길이는 몇개를 저장했는지

	 

int index=0; 배열의 요소 번호, 각 배열에 일련번호를 매겨놓은 것

배열명 : [0번]의 요소의 '주소'를 의미함 (절대 '값'이 아님)
요소명 : 배열명[번호]의 상태를 의미함

2차(다차) 배열 : 요소가 배열인 경우
                 배열명==요소명

처리방법 : 반복문 사용

int arr [10]
int length = 10; 
int curlength = 0; //배열선언

for(int i=0;,i<length;i++){ //i<length - 길이보다 작은 값까지
     arr[i]=(i+1);} //모든 배열의 요소에 임의값을 저장한다
	 
for(int i=0;,i<length;i++){
   printf("%d, ", arr[i]);} //요소의 값을 출력한다
