#include <stdio.h>
#include <string.h>
#include <stdlib.h>

int main1(void) {
	display(0);
	//요소의 값이 0이면, ┼ +
	
	int display(int n){
		char do0[] = { 1,1,1,1,0,1,1,0,1,1,0,1,1,1,1 };
		char do1[] = { 0,1,0,0,1,0,0,1,0,0,1,0,0,1,0 };
		char do2[] = { 1,1,1,0,0,1,1,1,1,1,0,0,1,1,1 };
		char do3[] = { 1,1,1,0,0,1,1,1,1,0,0,1,1,1,1 };
		char do4[] = { 1,0,1,1,0,1,1,1,1,0,0,1,0,0,1 };
		char do5[] = { 1,1,1,1,0,0,1,1,1,0,0,1,1,1,1 };
		char do6[] = { 1,1,1,1,0,0,1,1,1,1,0,1,1,1,1 };
		char do7[] = { 1,1,1,1,0,1,1,0,1,0,0,1,0,0,1 };
		char do8[] = { 1,1,1,1,0,1,1,1,1,1,0,1,1,1,1 };
		char do9[] = { 1,1,1,1,0,1,1,1,1,0,0,1,1,1,1 };
	}

	for () {
		for () {
			digit =
				(n == 0) ? d0[idx];
			    (n == 1) ? d1[idx];
			    (n == 2) ? d2[idx];
			    (n == 3) ? d3[idx];
			    (n == 4) ? d4[idx];
			    (n == 5) ? d5[idx];
				(n == 6) ? d6[idx];
			    (n == 7) ? d7[idx];
			    (n == 8) ? d8[idx];
				(n == 9) ? d9[idx];
		printf("\n");
	}
	return 0;
}








int main1(void) {
	int w = 3;
	int H = 5;
	int display[5*3] = { 1,1,1,1,0,1,1,1,1,0,0,1,1,1,1 }; //{1,1,1,1,0,1,1,1,1,1,0,1,1,1,1};
	//요소의 값이 0이면, ┼ +
	/*
	0) {1,1,1,1,0,1,1,0,1,1,0,1,1,1,1}
	1) {0,1,0,0,1,0,0,1,0,0,1,0,0,1,0}
	2) {1,1,1,0,0,1,1,1,1,1,0,0,1,1,1}
	3) {1,1,1,0,0,1,1,1,1,0,0,1,1,1,1}
	4) {1,0,1,1,0,1,1,1,1,0,0,1,0,0,1}
	5) {1,1,1,1,0,0,1,1,1,0,0,1,1,1,1}
	6) {1,1,1,1,0,0,1,1,1,1,0,1,1,1,1}
	7) {1,1,1,1,0,1,1,0,1,0,0,1,0,0,1}
	8) {1,1,1,1,0,1,1,1,1,1,0,1,1,1,1}
	9) {1,1,1,1,0,1,1,1,1,0,0,1,1,1,1}
	*/
		for (int n = 0; n < H; n++) {
			for (int c = 0; c < w; c++) {
				//값에 따른 분기처리를 할 수 있다
				int v = display[n * w + c];
				if (v == 0) {
					printf("[  ]");
				}
				else if (v == 1) {
					printf("[■]");
				}
			}
			printf("\n");
	     }
	
	return 0;
}





















int main1(void) {
	int shape[40] = {1};
	int cur = 0;
while(1){
	system("cls");// 윈도우명령임. 화면을 지우는 함수
	for (int i = 0; i < 40; i++) {
		//요소의 값에 따라 출력할 문자열이 다르다
		printf("%s", (shape[i]) ? "@ ":"  ");
}
printf("\n"); 
// 1을 한칸씩 오른쪽으로 옮기기
shape[cur-1] = 0;
shape[cur] = 1;
cur++; //반복해서 증가한다
cur %= 40; //무한 증가할수있으니0~39 범위로 고정시킨다.
}
	return 0;
}
