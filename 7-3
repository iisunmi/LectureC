#include <stdio.h>
#include <stdlib.h>
#include <string.h>



// < 파일 입출력 >
// FILE형 구조체, 포인터변수
// 함수의 사용법만 알아두면 된다
// 권한과 용도가 있음  소유자,그룹, 외부인들에 대해서 파일에 대한 쓰기/읽기/실행 권한 가능여부

struct _data {
	int code;
	char name[80];
	int type;
};


int main(void) {
	FILE* fp;
	//파일에 쓴것 그대로 읽어들인다
	//파일에 쓰기한 형식이 뭔지를 파악, format을 맞춘다
	struct _data d = { 0 };
	d.code = 100; //100을 문자라고 생각하고 보여주는 거다 즉, 100은 영문 d 이다/아스키코드
	strncpy_s(d.name, 80, "임의문자열", strlen("임의문자열")); // 문자열 대입을 위해서 사용 /strlen은 문자의길이를 반환함
	d.type = 1; //1은 문자가 없다 그래서 ?나옴

	struct _data t;
	fopen_s(&fp, "demo-user.dat", "rb");
	fwrite(&d, sizeof(d), 1, fp); //변수를 저장할때는 변수의 주소를 써야함/변수의 크기, 변수의 개수
	fclose(fp); // 닫고 파일내용을 확인할수있다
	printf("%d %s %d \n", t.code, t.name, t.type);



	return 0;
}





int mainwb(void) {
	FILE* fp;
	//파일에 쓴것 그대로 읽어들인다
	struct _data d = { 0 };
	d.code = 100;
	strncpy_s(d.name, 80, "임의문자열", strlen("임의문자열")); // 문자열 대입을 위해서 사용 /strlen은 문자의길이를 반환함
	d.type = 1;

	fopen_s(&fp, "demo-user.dat", "wb");
	fwrite(&d, sizeof(d), 1, fp); //변수를 저장할때는 변수의 주소를 써야함/변수의 크기, 변수의 개수
	fclose(fp); // 닫고 파일내용을 확인할수있다



	return 0;
}






int mainblockread(void) {//대량의 작업을 빨리 처리할 수 있음
	//블럭 입출력(바이너리 입출력)
	//크기 단위로 입출력
	FILE* fp;
	const char* fname = "demo-block.dat";
	int nums[5][20] = { 0 };
	fopen_s(&fp, fname, "rb"); //블럭 새로 생성이라서 wb
	fread(nums, sizeof(nums), 1, fp); /*메모리, 파일크기, 개수, 파일*/
	fclose(fp);
	printf("%s \n", nums[0]);
	printf("%s \n", nums[1]);
	printf("%s \n", nums[2]);
	printf("%s \n", nums[3]);
	return 0;
}








int mainblockw(void) {//대량의 작업을 빨리 처리할 수 있음
	//블럭 입출력
	//크기 단위로 입출력
	FILE* fp;
	const char* fname = "demo-block.dat";
	int nums[5][20] = { "AK","BK","CK","ADK"};
	fopen_s(&fp, fname, "wb"); //블럭 새로 생성이라서 wb
	fwrite(nums, sizeof(nums), 1, fp);////배열의 크기/1은 배열의 개수// 문자를 파일에 넣는게 아니라 정수값을 넣는거야
									  //[20] 즉 20개이니까 80바이트짜리 파일 생성됨
	fclose(fp);
	return 0;
}





int mainblock(void) {
	//블럭 입출력
	//크기 단위로 입출력
	FILE* fp;
	const char* fname = "demo-block.dat";
	int nums[20] = { 0 }; 
	fopen_s(&fp, fname, "wb"); //블럭 새로 생성이라서 wb
	fwrite(nums, sizeof(nums), 1, fp);////배열의 크기/1은 배열의 개수// 문자를 파일에 넣는게 아니라 정수값을 넣는거야
	                                  //[20] 즉 20개이니까 80바이트짜리 파일 생성됨
	fclose(fp);
	return 0;
}




int main_append(void) {

	FILE* fp = NULL;
	//파일 열기
	fopen_s(&fp, "demo.txt", "a"); 
	//파일이 있으면 기존 파일의 끝에 추가
	//파일이 없으면 새로 만든다
	if (fp == NULL) {//파일을 찾을수없다는 뜻
		printf("not found erreor : %s\n", "demo.txt");
		return 0;
	}
	//읽기 또는 쓰기(출력함수 찾기)
	
	fprintf(fp, "이름과 나이 %s %d \n", "아무개", 23);
	fprintf(fp, "[Log]%s :%d-%d-%d : %s\n", "192.3994.34.3", 2020,10,20,"sasang");

	//파일 닫기
	fclose(fp);


	return 0;
}






int main_write(void) {

	FILE* fp = NULL;
	//파일 열기
	fopen_s(&fp,"demo.txt"/*경로\\파일명.확장자*/,"w"); // char* :""
	if (fp == NULL) {//파일을 찾을수없다는 뜻
		printf("not found erreor : %s\n", "demo.txt");
		return 0;
	}
	//읽기 또는 쓰기(출력함수 찾기)
	//텍스트 파일은 쉽다. 이미 출력함수들을 알고 있으니깐~
	fputc('A', fp); /*출력할 문자, 어떤 파일에*/
	fputc('\n', fp);
	fputs("안녕하세요~?", fp);

	//여러가지, 여러개의 데이터
	fprintf(fp, "%d %s \n", 100, "korea");
	//파일 닫기
	fclose(fp);


	return 0;
}
